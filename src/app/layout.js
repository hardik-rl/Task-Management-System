// import { Poppins } from "next/font/google";
// import "../styles/globals.css";
// import Sidebar from "@/components/Sidebar";
// import { AuthProvider } from "./context/AuthContext";

// const poppins = Poppins({
//   variable: "--font-poppins",
//   subsets: ["latin"],
//   weight: ["400", "500", "600", "700"],
// });


// export const metadata = {
//   title: "Task Management System",
//   description: "Generated by Task Management System",
//   icons: {
//     icon: "/favicon.ico",
//   },
// };

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body
//         className={`${poppins.variable} antialiased`}
//       >
//         <AuthProvider>
//           <div className="flex min-h-screen">
//             <Sidebar />
//             <main className="flex-1 p-6 bg-gray-50">{children}</main>
//           </div>
//         </AuthProvider>
//       </body>
//     </html>
//   );
// }


"use client";

import { Poppins } from "next/font/google";
import "../styles/globals.css";
import Sidebar from "@/components/Sidebar";
import { AuthProvider, useAuth } from "./context/AuthContext";
import { usePathname } from "next/navigation";

const poppins = Poppins({
  variable: "--font-poppins",
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"],
});

// export const metadata = {
//   title: "Task Management System",
//   description: "Generated by Task Management System",
//   icons: {
//     icon: "/favicon.ico",
//   },
// };

// ⬇️ Create a wrapper so we can use hooks inside layout
function LayoutWithSidebar({ children }) {
  const { isAuthenticated, loading } = useAuth();
  const pathname = usePathname();

  const hideSidebarPaths = ["/login", "/register"];
  const shouldShowSidebar = isAuthenticated && !hideSidebarPaths.includes(pathname);

  if (loading) return <div>Loading...</div>;

  return (
    <div className="flex min-h-screen">
      {shouldShowSidebar && <Sidebar />}
      <main className="flex-1 p-6 bg-gray-50">{children}</main>
    </div>
  );
}

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className={`${poppins.variable} antialiased`}>
        <AuthProvider>
          <LayoutWithSidebar>{children}</LayoutWithSidebar>
        </AuthProvider>
      </body>
    </html>
  );
}
